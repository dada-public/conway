{"mappings":"AEAoB,CAAA,CAClB,KAAK,CAAI,CAAE,CAAI,EACb,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,MAAM,GAChB,IAAI,GACJ,GAAG,CAAC,IAAM,MAAM,GAAM,IAAI,CAAC,CAAA,IAC9B,IAAI,CAAC,KAAK,CAAG,SAAS,aAAa,CAAC,SACpC,IAAI,CAAC,WAAW,CAAG,CAAA,EACnB,IAAI,CAAC,WAAW,CAAG,CAAA,EAEnB,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IAAO,CACxC,IAAM,EAAK,SAAS,aAAa,CAAC,MAClC,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IAAO,CACxC,IAAM,EAAK,SAAS,aAAa,CAAC,MAClC,EAAG,YAAY,CAAC,WAAY,GAC5B,EAAG,YAAY,CAAC,WAAY,GAC5B,EAAG,WAAW,CAAC,EACjB,CACA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EACzB,CAEA,EAAK,WAAW,CAAC,IAAI,CAAC,KAAK,EAE3B,SAAS,gBAAgB,CAAC,YAAa,KACrC,IAAI,CAAC,WAAW,CAAG,CAAA,CACrB,GAEA,SAAS,gBAAgB,CAAC,UAAW,KACnC,IAAI,CAAC,WAAW,CAAG,CAAA,CACrB,GAEA,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAS,CAAC,CAAA,OAAE,CAAM,CAAE,IAC9C,GAAI,IAAI,CAAC,WAAW,EAAI,EAAO,OAAO,CAAC,MAAO,CAC5C,GAAM,CAAC,EAAK,EAAI,CAAG,CACjB,EAAO,YAAY,CAAC,YACpB,EAAO,YAAY,CAAC,YACrB,CACD,IAAI,CAAC,YAAY,CAAC,EAAK,EAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CACnD,CACF,GAEA,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,YAAa,CAAC,CAAA,OAAE,CAAM,CAAE,IAClD,GAAI,IAAI,CAAC,WAAW,EAAI,EAAO,OAAO,CAAC,OAAS,IAAI,CAAC,WAAW,CAAE,CAChE,GAAM,CAAC,EAAK,EAAI,CAAG,CACjB,EAAO,YAAY,CAAC,YACpB,EAAO,YAAY,CAAC,YACrB,CACD,IAAI,CAAC,YAAY,CAAC,EAAK,EAAK,CAAA,EAC9B,CACF,EACF,EAEA,aAAa,CAAG,CAAE,CAAG,CAAE,CAAK,EAC1B,IAAM,EAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAI,CAAC,KAAK,CAAC,EAAI,AAC5C,CAAA,EAAQ,EAAK,SAAS,CAAC,GAAG,CAAC,SAAW,EAAK,SAAS,CAAC,MAAM,CAAC,SAC5D,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,CACzB,EAEA,aAAa,CAAG,CAAE,CAAG,EACnB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,AAC7B,CACF,CAAA,ED3DK,IAAI,CAAC,GAAI,SAAS,aAAa,CAAC,SAGrC,QAAQ,GAAG,CAAC,S,4D","sources":["<anon>","src/index.js","src/modules/Grid.js"],"sourcesContent":["const $9c9d255ccbab6b7d$export$ef2184bd89960b14 = {\n    init (size, root) {\n        this.size = size;\n        this.cells = Array(size).fill().map(()=>Array(size).fill(false));\n        this.table = document.createElement(\"table\");\n        this.isMouseDown = false;\n        this.interactive = true;\n        for(let row = 0; row < this.size; row++){\n            const tr = document.createElement(\"tr\");\n            for(let col = 0; col < this.size; col++){\n                const td = document.createElement(\"td\");\n                td.setAttribute(\"data-col\", col);\n                td.setAttribute(\"data-row\", row);\n                tr.appendChild(td);\n            }\n            this.table.appendChild(tr);\n        }\n        root.appendChild(this.table);\n        document.addEventListener(\"mousedown\", ()=>{\n            this.isMouseDown = true;\n        });\n        document.addEventListener(\"mouseup\", ()=>{\n            this.isMouseDown = false;\n        });\n        this.table.addEventListener(\"click\", ({ target: target })=>{\n            if (this.interactive && target.matches(\"td\")) {\n                const [col, row] = [\n                    target.getAttribute(\"data-col\"),\n                    target.getAttribute(\"data-row\")\n                ];\n                this.setCellValue(row, col, !this.cells[row][col]);\n            }\n        });\n        this.table.addEventListener(\"mousemove\", ({ target: target })=>{\n            if (this.interactive && target.matches(\"td\") && this.isMouseDown) {\n                const [col, row] = [\n                    target.getAttribute(\"data-col\"),\n                    target.getAttribute(\"data-row\")\n                ];\n                this.setCellValue(row, col, true);\n            }\n        });\n    },\n    setCellValue (row, col, value) {\n        const cell = this.table.rows[row].cells[col];\n        value ? cell.classList.add(\"alive\") : cell.classList.remove(\"alive\");\n        this.cells[row][col] = value;\n    },\n    getCellValue (row, col) {\n        return this.cells[row][col];\n    }\n};\n\n\n(0, $9c9d255ccbab6b7d$export$ef2184bd89960b14).init(16, document.querySelector(\"main\"));\nconsole.log(\"Hello!\");\n\n\n//# sourceMappingURL=index.8fe4693b.js.map\n","import {Grid} from \"./modules/Grid\"\n\nGrid.init(16, document.querySelector(\"main\"))\n\n\nconsole.log(\"Hello!\")","export const Grid = {\n  init(size, root) {\n    this.size = size;\n    this.cells = Array(size)\n      .fill()\n      .map(() => Array(size).fill(false));\n    this.table = document.createElement(\"table\");\n    this.isMouseDown = false;\n    this.interactive = true;\n\n    for (let row = 0; row < this.size; row++) {\n      const tr = document.createElement(\"tr\");\n      for (let col = 0; col < this.size; col++) {\n        const td = document.createElement(\"td\");\n        td.setAttribute(\"data-col\", col);\n        td.setAttribute(\"data-row\", row);\n        tr.appendChild(td);\n      }\n      this.table.appendChild(tr);\n    }\n\n    root.appendChild(this.table);\n\n    document.addEventListener(\"mousedown\", () => {\n      this.isMouseDown = true;\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      this.isMouseDown = false;\n    });\n\n    this.table.addEventListener(\"click\", ({ target }) => {\n      if (this.interactive && target.matches(\"td\")) {\n        const [col, row] = [\n          target.getAttribute(\"data-col\"),\n          target.getAttribute(\"data-row\"),\n        ];\n        this.setCellValue(row, col, !this.cells[row][col]);\n      }\n    });\n\n    this.table.addEventListener(\"mousemove\", ({ target }) => {\n      if (this.interactive && target.matches(\"td\") && this.isMouseDown) {\n        const [col, row] = [\n          target.getAttribute(\"data-col\"),\n          target.getAttribute(\"data-row\"),\n        ];\n        this.setCellValue(row, col, true);\n      }\n    });\n  },\n\n  setCellValue(row, col, value) {\n    const cell = this.table.rows[row].cells[col];\n    value ? cell.classList.add(\"alive\") : cell.classList.remove(\"alive\");\n    this.cells[row][col] = value;\n  },\n\n  getCellValue(row, col) {\n    return this.cells[row][col];\n  },\n};"],"names":["init","size","root","cells","Array","fill","map","table","document","createElement","isMouseDown","interactive","row","tr","col","td","setAttribute","appendChild","addEventListener","target","matches","getAttribute","setCellValue","value","cell","rows","classList","add","remove","getCellValue","querySelector","console","log"],"version":3,"file":"index.8fe4693b.js.map"}